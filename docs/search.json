[
  {
    "objectID": "tidytuesday_exercise.html",
    "href": "tidytuesday_exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Placeholder file for the future Tidy Tuesday exercise."
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "My name is Leah Lariscy and I have a BS in Environmental Health and am now a first year PhD student in Environmental Health. My advisors are Travis Glenn and Erin Lipp and my research involves molecular detection in wastewater, mainly viral pathogens such as SARS-CoV-2, Mpox, and RSV. I also have some experience in many microbiology techniques, as well as some bioinformatics."
  },
  {
    "objectID": "aboutme.html#experience",
    "href": "aboutme.html#experience",
    "title": "About me",
    "section": "Experience",
    "text": "Experience\nI first began working with R studio at the beginning of 2022, although I was mostly just trying to learn from other grad students and self-teach. In the Fall of 2022 I started my graduate career by taking EPID 7500, an intro to coding in R course, which allowed me to get familiar with R studio and get comfortable doing simple analysis. I also started running the wastewater surveillance script for the Lipp Lab’s COVID-19 surveillance website in the Fall. This involved raw data from qPCR outputs which I used to estimate copies per liter of SARS-CoV-2 viral particles in Athens-Clarke County wastewater influent."
  },
  {
    "objectID": "aboutme.html#my-goals-for-the-class",
    "href": "aboutme.html#my-goals-for-the-class",
    "title": "About me",
    "section": "My goals for the class",
    "text": "My goals for the class\nI have been looking forward to taking this class for a while now as I’ve heard so many great things! My hope is that this class will give me more tools to become a better researcher, such as creating reproducible workflows and doing more complicated statistical analysis on my own data."
  },
  {
    "objectID": "aboutme.html#a-picture-of-me",
    "href": "aboutme.html#a-picture-of-me",
    "title": "About me",
    "section": "A picture of me!",
    "text": "A picture of me!"
  },
  {
    "objectID": "aboutme.html#lipp-lab-covid-19-surveillance-website",
    "href": "aboutme.html#lipp-lab-covid-19-surveillance-website",
    "title": "About me",
    "section": "Lipp Lab COVID-19 Surveillance Website",
    "text": "Lipp Lab COVID-19 Surveillance Website\nCOVID-19 Dashboard\nHere is the surveillance site that I described above, which shows you a graph of wastewater viral levels compared to clinical cases of COVID-19 from July 2020 to December 2022. Since I only have experience working on the data analysis side of this, I am also interested in learning to create websites similar to this for my continued detection work with other pathogens."
  },
  {
    "objectID": "visualization_exercise.html",
    "href": "visualization_exercise.html",
    "title": "Visualization Exercise",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.1\n✔ readr   2.1.2     ✔ forcats 0.5.2\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(here)\n\nhere() starts at /Users/leahlariscy/Desktop/MADA2023/leahlariscy-MADA-portfolio\n\nlibrary(ggthemes)\n\n\n\n\n\nknitr::opts_chunk$set(fig.width=10, fig.height=8) \n\n\n\n\n\nhere()\n\n[1] \"/Users/leahlariscy/Desktop/MADA2023/leahlariscy-MADA-portfolio\"\n\ndonation <- read_csv(\"data/sports-political-donations/sports-political-donations.csv\")\n\nRows: 2798 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): Owner, Team, League, Recipient, Amount, Party\ndbl (1): Election Year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndonation\n\n# A tibble: 2,798 × 7\n   Owner       Team         League Recipient                Amount Elect…¹ Party\n   <chr>       <chr>        <chr>  <chr>                    <chr>    <dbl> <chr>\n 1 Adam Silver Commissioner NBA    WRIGHT 2016              $4,000    2016 Demo…\n 2 Adam Silver Commissioner NBA    BIDEN FOR PRESIDENT      $2,800    2020 Demo…\n 3 Adam Silver Commissioner NBA    CORY 2020                $2,700    2020 Demo…\n 4 Adam Silver Commissioner NBA    Kamala Harris for the P… $2,700    2020 Demo…\n 5 Adam Silver Commissioner NBA    Win The Era PAC          $2,700    2020 Demo…\n 6 Adam Silver Commissioner NBA    KOHL FOR CONGRESS        $2,000    2018 Demo…\n 7 Adam Silver Commissioner NBA    BETO FOR TEXAS           $1,000    2018 Demo…\n 8 Adam Silver Commissioner NBA    MONTANANS FOR TESTER     $1,000    2018 Demo…\n 9 Adam Silver Commissioner NBA    SERVE AMERICA PAC        $1,000    2018 Demo…\n10 Adam Silver Commissioner NBA    ADAM SCHLEIFER FOR CONG… $1,000    2020 Demo…\n# … with 2,788 more rows, and abbreviated variable name ¹​`Election Year`\n# ℹ Use `print(n = ...)` to see more rows\n\n\n\n\n\n\ndonation_clean <- donation %>% \n  filter(League ==c(\"MLB\",\"NASCAR\",\"NBA\",\"NFL\",\"NHL\",\"WNBA\")) %>%\n  filter(Party ==c(\"Democrat\",\"Republican\")) %>% \n  mutate(Amount = parse_number(Amount)) %>% \n  group_by(League,`Election Year`,Party) %>% \n  summarise(party_donations = sum(Amount)) %>% \n  ungroup() \n\nWarning in League == c(\"MLB\", \"NASCAR\", \"NBA\", \"NFL\", \"NHL\", \"WNBA\"): longer\nobject length is not a multiple of shorter object length\n\n\nWarning in Party == c(\"Democrat\", \"Republican\"): longer object length is not a\nmultiple of shorter object length\n\n\n`summarise()` has grouped output by 'League', 'Election Year'. You can override\nusing the `.groups` argument.\n\n\n\n\n\n\ndonation_plot <- donation_clean %>%\nggplot(aes(fill=Party, y=party_donations, x=`Election Year`)) +\ngeom_bar(position = \"fill\", stat = \"identity\", color = \"white\") +\nfacet_wrap(as.factor(donation_clean$League)) + #plot by League\nscale_fill_manual(name=\"DONATIONS TO\", values=c(\"#00A5E3\", \"#CC0000\"), #looked up hexcodes on google\nlabels=c(\"DEMOCRATS\",\"REPUBLICANS\")) + #fill colors in correct order\ntheme_fivethirtyeight() +\nscale_x_continuous(breaks = seq(2016,2020,2)) + #2 year breaks between 2016 & 2020\nlabs(title = \"Across leagues, majority of donations go to Republicans\",\nsubtitle = \"Share of donations from team owners in six leagues, per year, league and party\") +\ntheme(legend.title = element_text(face = \"bold\", size = 16),\nlegend.text = element_text(size = 16),\nplot.title.position = \"plot\",\nplot.title = element_text(face = \"bold\", size = 24),\nplot.subtitle = element_text(size = 18),\nlegend.position = \"top\",\naxis.text.x = element_text(size = 14))\ndonation_plot\n\n\n\n\nBecause I had to remove some data, my plot looks slightly different but still similar."
  },
  {
    "objectID": "coding_exercise.html",
    "href": "coding_exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "Load required packages and data here\nSubset the data, only keeping data from Africa\nPlot the data here"
  },
  {
    "objectID": "coding_exercise.html#this-section-added-by-sara-benist",
    "href": "coding_exercise.html#this-section-added-by-sara-benist",
    "title": "R Coding Exercise",
    "section": "This section added by Sara Benist",
    "text": "This section added by Sara Benist\n###Load the packages\n\nlibrary(dslabs)\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(broom)\n\n\nSubsetting data\nI want to continue to explore the data related to African countries, specifically how gdp and infant mortality relates to fertility.\n\n#subset African countries\nafricadata <- filter(gapminder, continent == \"Africa\")\n\n#select only the `gdp` and `fertility` columns and assign to `gdpfert`\ngdpfert <- africadata %>% select(gdp, fertility)\n\n#select only the `fertility` and `infant_mortality` columns and assign to `fertmort`\nfertmort <- africadata %>% select(fertility, infant_mortality)\n\n\n\nPlotting the data\nNext, I wanted to look at the plots for the two new datasets. For both gdpfert and fertmort, I plotted the data points using geom_point() and geom_smooth() to produce a scatter plot with a smoothed line over the data. The smoothed line helps visualize patterns in the plot.\n\n#produce scatter plot with smooth line; x = gdp, y = fertility\n#x-axis log transformed for gdp data\nggplot(gdpfert, aes(gdp, fertility))+\n  geom_point() + \n  geom_smooth()+\n  scale_x_continuous(trans = \"log\")\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\nWarning: Removed 637 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 637 rows containing missing values (`geom_point()`).\n\n\n\n\n\nWe can see a distinct negative correlation with fertility after the GDP of a country reaches above approx. 9.7 billion dollars. Note that most African countries have a GDP between 485 million and $9.7 billion dollars where the line fluctuates around 6 children per woman.\n\n#produce scatter plot with smooth line; x = fertility, y = infant_mortality\nggplot(fertmort, aes(fertility, infant_mortality)) +\n  geom_point()+\n  geom_smooth()\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\nWarning: Removed 226 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 226 rows containing missing values (`geom_point()`).\n\n\n\n\n\nHere, fertility and infant mortality are positively correlated until approximately 7 children per woman or 125 infants deaths per 1000.\n\n\nLinear modeling\nI would like to consider a linear model predicting fertility from GDP and infant mortality for African countries. The glm() function will be used to create a linear model for this scenario. The tidy() function from the broom package produces the summary of the model.\n\nfit3 <- glm(fertility ~ gdp + infant_mortality, data = africadata)\n\ntidy(fit3)\n\n# A tibble: 3 × 5\n  term              estimate std.error statistic   p.value\n  <chr>                <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)       3.91e+ 0  5.49e- 2      71.2 0        \n2 gdp              -1.41e-11  9.62e-13     -14.7 1.45e- 46\n3 infant_mortality  2.18e- 2  4.99e- 4      43.6 4.58e-300\n\n\nBoth GDP and infant mortality has a statistically significant affect on fertility (p-values > 0.001). GDP has an extremely small negative effect on fertility (slope = -1.411e-11), and infant mortality has a small positive effect (slope = 2.176e-2)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Leah Lariscy’s website and data analysis portfolio",
    "section": "",
    "text": "Hello!\n\nThis is my website!\nWelcome to my website and data analysis portfolio.\n\nPlease use the Menu Bar above to look around.\nHave fun!"
  },
  {
    "objectID": "data_analysis_exercise.html",
    "href": "data_analysis_exercise.html",
    "title": "Data Analysis Exercise",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.1 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(lubridate)\n\nLoading required package: timechange\n\nAttaching package: 'lubridate'\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union"
  },
  {
    "objectID": "data_analysis_exercise.html#data-description",
    "href": "data_analysis_exercise.html#data-description",
    "title": "Data Analysis Exercise",
    "section": "Data description",
    "text": "Data description\nThis dataset was accessed from the Bacteria, Enterics, Amoeba, and Mycotics (BEAM) Dashboard, which houses data collected by the System for Enteric Disease Response, Investigation, and Coordination (SEDRIC). The data points represent pathogens isolated from infected individuals, namely Salmonella, E. Coli, Shigella, and Campylobacter bacteria.\nYou can access the BEAM Dashboard here.\n\nbeam_raw <- read_csv(\"data_analysis_exercise/data/raw_data/BEAM_Dashboard_Report_Data.csv\")\n\nRows: 128342 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): State, Source, Pathogen, Serotype/Species\ndbl (6): Year, Month, Number_of_isolates, Outbreak_associated_isolates, New_...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "data_analysis_exercise.html#data-cleaning",
    "href": "data_analysis_exercise.html#data-cleaning",
    "title": "Data Analysis Exercise",
    "section": "Data cleaning",
    "text": "Data cleaning\nBegin by combining the Year and Month variables into one Date variable, then select for variables of interest and rename them. Lastly, change all NAs to 0s where necessary.\n\nbeam_clean <- beam_raw %>% mutate(date = make_date(year=Year, month=Month, day=1)) %>% \n\n  select(c(date, state=State, source=Source, pathogen=Pathogen, species=`Serotype/Species`,\n       n_isolates=Number_of_isolates, n_outbreak_associated=Outbreak_associated_isolates)) %>% \n\n  mutate(n_isolates = ifelse(is.na(n_isolates), 0, n_isolates), \n       n_outbreak_associated = ifelse(is.na(n_outbreak_associated), 0, n_outbreak_associated))\n\nprint(beam_clean)\n\n# A tibble: 128,342 × 7\n   date       state source pathogen    species                   n_iso…¹ n_out…²\n   <date>     <chr> <chr>  <chr>       <chr>                       <dbl>   <dbl>\n 1 2017-09-01 TX    Stool  Escherichia Shigella Flexneri Seroty…       1       0\n 2 2017-09-01 TX    Stool  Escherichia sonnei                         14       0\n 3 2017-09-01 TX    Stool  Salmonella  Agbeni                          1       0\n 4 2017-09-01 TX    Stool  Salmonella  Agona                           5       0\n 5 2017-09-01 TX    Stool  Salmonella  Altona                          1       0\n 6 2017-09-01 TX    Stool  Salmonella  Anatum                          2       2\n 7 2017-09-01 TX    Stool  Salmonella  Anatum, Newington, Minne…       2       0\n 8 2017-09-01 TX    Stool  Salmonella  Baildon                         1       0\n 9 2017-09-01 TX    Stool  Salmonella  Bareilly                        2       0\n10 2017-09-01 TX    Stool  Salmonella  Berta                           2       0\n# … with 128,332 more rows, and abbreviated variable names ¹​n_isolates,\n#   ²​n_outbreak_associated"
  },
  {
    "objectID": "data_analysis_exercise.html#save-cleaned-data-to-rds-file",
    "href": "data_analysis_exercise.html#save-cleaned-data-to-rds-file",
    "title": "Data Analysis Exercise",
    "section": "Save cleaned data to RDS file",
    "text": "Save cleaned data to RDS file\n\nsaveRDS(beam_clean, \"data_analysis_exercise/data/raw_data/BEAM_Report_clean.RDS\")"
  },
  {
    "objectID": "data_analysis_exercise.html#read-in-rds-file",
    "href": "data_analysis_exercise.html#read-in-rds-file",
    "title": "Data Analysis Exercise",
    "section": "Read in RDS file",
    "text": "Read in RDS file\n\n#read_rds(\"data_analysis_exercise/data/raw_data/BEAM_Report_clean.RDS\")"
  },
  {
    "objectID": "data_analysis_exercise.html#exploratory-analysis",
    "href": "data_analysis_exercise.html#exploratory-analysis",
    "title": "Data Analysis Exercise",
    "section": "Exploratory analysis",
    "text": "Exploratory analysis\nI would be interested in grouping by pathogen and exploring trends across states. I’d also like to see which pathogens are more likely to be associated with outbreaks."
  },
  {
    "objectID": "hello.html",
    "href": "hello.html",
    "title": "Penguins, meet Quarto!",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "hello.html#meet-the-penguins",
    "href": "hello.html#meet-the-penguins",
    "title": "Penguins, meet Quarto!",
    "section": "Meet the penguins",
    "text": "Meet the penguins\n\nThe penguins data from the palmerpenguins package contains size measurements for 344 penguins from three species observed on three islands in the Palmer Archipelago, Antarctica.\nThe plot below shows the relationship between flipper and bill lengths of these penguins."
  },
  {
    "objectID": "data_analysis_exercise.html#this-section-was-added-by-kimberly-perez",
    "href": "data_analysis_exercise.html#this-section-was-added-by-kimberly-perez",
    "title": "Data Analysis Exercise",
    "section": "This section was added by Kimberly Perez",
    "text": "This section was added by Kimberly Perez\n#Reading in RDS\nHere I will use the readRDS() function to load Leah’s cleaned BEAM data.\n\n#Utilize readRDS for this task\nnewbc<-readRDS(\"data_analysis_exercise/data/raw_data/BEAM_Report_clean.RDS\")"
  },
  {
    "objectID": "data_analysis_exercise.html#state-selection",
    "href": "data_analysis_exercise.html#state-selection",
    "title": "Data Analysis Exercise",
    "section": "State selection",
    "text": "State selection\nHere I will use the filter function to select seven states\n\nbc<- beam_clean %>%\n  filter(state == 'GA' | state == 'AZ' | state == 'CA'| state == 'ND' | state == 'NY'| state == 'OR' | state == 'KS')\n\n\nPathogen Source by State\n\nggplot(bc, aes(state, pathogen, colour = source)) + geom_count(show.legend=T) +\n  labs(y=\"Pathogen\", \n       x=\"State\", \n       title=\"Pathogen Source by State (2017-2022)\")"
  },
  {
    "objectID": "data_analysis_exercise.html#outbreak-by-state-and-pathogen",
    "href": "data_analysis_exercise.html#outbreak-by-state-and-pathogen",
    "title": "Data Analysis Exercise",
    "section": "Outbreak by state and pathogen",
    "text": "Outbreak by state and pathogen\n\ntheme_set(theme_bw())  \nbc1 <- ggplot(bc, aes(state, n_outbreak_associated)) + \n  labs(title=\"Pathogen Associated with Outbreak by State (2017-2022)\",\n      y= \"Number of Outbreaks\",\n      x= \"State\")\n\nbc1 + geom_jitter(aes(col=pathogen, size=n_outbreak_associated)) + \n  geom_smooth(aes(col=pathogen), method=\"lm\", se=F)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "data_analysis_exercise.html#density-of-each-pathogen-over-time",
    "href": "data_analysis_exercise.html#density-of-each-pathogen-over-time",
    "title": "Data Analysis Exercise",
    "section": "Density of each pathogen over time",
    "text": "Density of each pathogen over time\nThis website seems to be a comprehensive resource for data visualization. I found the density plot and wanted to try my hand at recreating it. Below is my attempt.\n\nbcc <- ggplot(bc, aes(date))\nbcc + geom_density(aes(fill=factor(pathogen)), alpha=0.8) + \n    labs(title=\"Pathogen density from (2017-2022)\", \n         x=\"Year\",\n         y=\"Density\",\n         fill=\"Pathogen\") + ylim (0,0.001)"
  },
  {
    "objectID": "data_analysis_exercise.html#outbreak-by-state-and-pathogen-2017-2022",
    "href": "data_analysis_exercise.html#outbreak-by-state-and-pathogen-2017-2022",
    "title": "Data Analysis Exercise",
    "section": "Outbreak by State and Pathogen (2017-2022)",
    "text": "Outbreak by State and Pathogen (2017-2022)\n\ntheme_set(theme_bw())  \nbc1 <- ggplot(bc, aes(state, n_outbreak_associated)) + \n  labs(title=\"Pathogen Associated with Outbreak by State (2017-2022) by State\",\n      y= \"Number of Outbreaks\",\n      x= \"State\")\n\nbc1 + geom_jitter(aes(col=pathogen, size=n_outbreak_associated)) + \n  geom_smooth(aes(col=pathogen), method=\"lm\", se=F)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nbc_1<- bc %>% \n  group_by(date, pathogen, state, n_outbreak_associated) %>% \n  mutate(count=n()) %>% \n  ungroup() %>%  \n  select(-c(n_isolates, species, source))\n\nbc_1 %>% ggplot() +geom_line(\n  aes(x = date,\n      y = n_outbreak_associated,\n      color = pathogen,\n      linetype = state)) +\n  theme_bw() +\n  labs(x = \"Year\",\n       y = \"Number of Outbreaks (Associated with Pathogen)\",\n       color= \"Pathogen\",\n       linetype=\"State\",\n       title = \"Pathogen Associated with an Outbreak by State (2017-2022)\") +\n  theme(plot.title = element_text(hjust = 0.6))\n\n\n\n\nSalmonella and Ecoli look to be the pathogens that are associated with the largest number of outbreaks among these four states.\n\nPathogen Source by State\nHave you ever wondered what laboratories isolate pathogens from? Let’s explore the possibilities below!\n\n#Plotting \nggplot(bc, aes(state, pathogen, colour = source)) + geom_count(show.legend=T) +\n  labs(y=\"Pathogen\", \n       x=\"State\", \n       title=\"Pathogen Source by State (2017-2022)\")\n\n\n\n\nFrom the visualization above, it looks like most labs are able to isolate pathogens from stool samples, however, there may be variation by state!"
  },
  {
    "objectID": "data_analysis_exercise.html#a-bit-more-data-wrangling",
    "href": "data_analysis_exercise.html#a-bit-more-data-wrangling",
    "title": "Data Analysis Exercise",
    "section": "A bit more data wrangling",
    "text": "A bit more data wrangling\nI will now select four states to analyze\n\n#Creating a new dataframe with four selected states\nbc<- newbc %>%\n  filter(state == 'GA'  | state == 'CA'| state == 'ND' | state == 'OR' )"
  },
  {
    "objectID": "data_analysis_exercise.html#potentially-helpful-resource",
    "href": "data_analysis_exercise.html#potentially-helpful-resource",
    "title": "Data Analysis Exercise",
    "section": "Potentially helpful resource",
    "text": "Potentially helpful resource\nThis website seems to be a helpful resource for data visualization. I found some interesting visualizations and hope to practice utilizing several.\n```"
  },
  {
    "objectID": "data_analysis_exercise.html#visualizing-outbreak-by-state-and-pathogen-2017-2022-in-two-ways",
    "href": "data_analysis_exercise.html#visualizing-outbreak-by-state-and-pathogen-2017-2022-in-two-ways",
    "title": "Data Analysis Exercise",
    "section": "Visualizing Outbreak by State and Pathogen (2017-2022) in two ways…",
    "text": "Visualizing Outbreak by State and Pathogen (2017-2022) in two ways…\n\ntheme_set(theme_bw())  \n\n#Visualizing the data...\nbc1 <- ggplot(bc, aes(state, n_outbreak_associated)) + \n  labs(title=\"Pathogen Associated with Outbreak by State (2017-2022) by State\",\n      y= \"Number of Outbreaks\",\n      x= \"State\")\n\nbc1 + geom_jitter(aes(col=pathogen, size=n_outbreak_associated)) + \n  geom_smooth(aes(col=pathogen), method=\"lm\", se=F)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n#Another way to visualize the data...\nbc %>% \n  ggplot() +geom_line(\n  aes(x = date,\n      y = n_outbreak_associated,\n      color = pathogen,\n      linetype = state)) +\n  theme_bw() +\n  labs(x = \"Year\",\n       y = \"Number of Outbreaks (Associated with Pathogen)\",\n       color= \"Pathogen\",\n       linetype=\"State\",\n       title = \"Pathogen Associated with an Outbreak by State (2017-2022)\") +\n  theme(plot.title = element_text(hjust = 0.6))\n\n\n\n\nSalmonella and Ecoli look to be the pathogens that are associated with the largest number of outbreaks among these four states.\n\nPathogen Source by State\nHave you ever wondered what laboratories isolate pathogens from? Let’s explore the possibilities below!\n\n#Plotting \nggplot(bc, aes(state, pathogen, colour = source)) + geom_count(show.legend=T) +\n  labs(y=\"Pathogen\", \n       x=\"State\", \n       title=\"Pathogen Source by State (2017-2022)\")\n\n\n\n\nFrom the visualization above, it looks like most labs are able to isolate pathogens from stool samples, however, there may be variation by state!"
  },
  {
    "objectID": "visualization_exercise.html#load-data",
    "href": "visualization_exercise.html#load-data",
    "title": "Visualization Exercise",
    "section": "Load data",
    "text": "Load data\n\nhere()\n\n[1] \"/Users/leahlariscy/Desktop/MADA2023/leahlariscy-MADA-portfolio\"\n\ndonation <- read_csv(\"data/sports-political-donations/sports-political-donations.csv\")\n\nRows: 2798 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): Owner, Team, League, Recipient, Amount, Party\ndbl (1): Election Year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndonation\n\n# A tibble: 2,798 × 7\n   Owner       Team         League Recipient                Amount Elect…¹ Party\n   <chr>       <chr>        <chr>  <chr>                    <chr>    <dbl> <chr>\n 1 Adam Silver Commissioner NBA    WRIGHT 2016              $4,000    2016 Demo…\n 2 Adam Silver Commissioner NBA    BIDEN FOR PRESIDENT      $2,800    2020 Demo…\n 3 Adam Silver Commissioner NBA    CORY 2020                $2,700    2020 Demo…\n 4 Adam Silver Commissioner NBA    Kamala Harris for the P… $2,700    2020 Demo…\n 5 Adam Silver Commissioner NBA    Win The Era PAC          $2,700    2020 Demo…\n 6 Adam Silver Commissioner NBA    KOHL FOR CONGRESS        $2,000    2018 Demo…\n 7 Adam Silver Commissioner NBA    BETO FOR TEXAS           $1,000    2018 Demo…\n 8 Adam Silver Commissioner NBA    MONTANANS FOR TESTER     $1,000    2018 Demo…\n 9 Adam Silver Commissioner NBA    SERVE AMERICA PAC        $1,000    2018 Demo…\n10 Adam Silver Commissioner NBA    ADAM SCHLEIFER FOR CONG… $1,000    2020 Demo…\n# … with 2,788 more rows, and abbreviated variable name ¹​`Election Year`\n# ℹ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "visualization_exercise.html#clean-and-wrangle-data",
    "href": "visualization_exercise.html#clean-and-wrangle-data",
    "title": "Visualization Exercise",
    "section": "Clean and wrangle data",
    "text": "Clean and wrangle data\n\ndonation_clean <- donation %>% \n  filter(League ==c(\"MLB\",\"NASCAR\",\"NBA\",\"NFL\",\"NHL\",\"WNBA\")) %>%\n  filter(Party ==c(\"Democrat\",\"Republican\")) %>% \n  mutate(Amount = parse_number(Amount)) %>% \n  group_by(League,`Election Year`,Party) %>% \n  summarise(party_donations = sum(Amount)) %>% \n  ungroup() \n\nWarning in League == c(\"MLB\", \"NASCAR\", \"NBA\", \"NFL\", \"NHL\", \"WNBA\"): longer\nobject length is not a multiple of shorter object length\n\n\nWarning in Party == c(\"Democrat\", \"Republican\"): longer object length is not a\nmultiple of shorter object length\n\n\n`summarise()` has grouped output by 'League', 'Election Year'. You can override\nusing the `.groups` argument."
  },
  {
    "objectID": "visualization_exercise.html#plot-data",
    "href": "visualization_exercise.html#plot-data",
    "title": "Visualization Exercise",
    "section": "Plot data",
    "text": "Plot data\n\ndonation_plot <- donation_clean %>%\nggplot(aes(fill=Party, y=party_donations, x=`Election Year`)) +\ngeom_bar(position = \"fill\", stat = \"identity\", color = \"white\") +\nfacet_wrap(as.factor(donation_clean$League)) + #plot by League\nscale_fill_manual(name=\"DONATIONS TO\", values=c(\"#00A5E3\", \"#CC0000\"), #looked up hexcodes on google\nlabels=c(\"DEMOCRATS\",\"REPUBLICANS\")) + #fill colors in correct order\ntheme_fivethirtyeight() +\nscale_x_continuous(breaks = seq(2016,2020,2)) + #2 year breaks between 2016 & 2020\nlabs(title = \"Across leagues, majority of donations go to Republicans\",\nsubtitle = \"Share of donations from team owners in six leagues, per year, league and party\") +\ntheme(legend.title = element_text(face = \"bold\", size = 16),\nlegend.text = element_text(size = 16),\nplot.title.position = \"plot\",\nplot.title = element_text(face = \"bold\", size = 24),\nplot.subtitle = element_text(size = 18),\nlegend.position = \"top\",\naxis.text.x = element_text(size = 14))\ndonation_plot\n\n\n\n\nBecause I had to remove some data, my plot looks slightly different but still similar."
  }
]