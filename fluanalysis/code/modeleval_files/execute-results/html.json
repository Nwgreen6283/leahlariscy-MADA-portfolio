{
  "hash": "0e84385a8b2be3f0afab89faa11ed27f",
  "result": {
    "markdown": "---\ntitle: \"Model Evaluation\"\nauthor: \"Leah Lariscy\"\neditor: visual\nformat:\n  html:\n    toc: true\n    toc-depth: 3\n---\n\n\n## Library packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidymodels)\nlibrary(tidyverse)\nlibrary(here)\nlibrary(dotwhisker)\n```\n:::\n\n\n## Load Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsymptoms_fit <- readRDS(here(\"fluanalysis/data/processed_data/symptoms_clean.RDS\"))\ncolnames(symptoms_fit) #quick look at data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"SwollenLymphNodes\" \"ChestCongestion\"   \"ChillsSweats\"     \n [4] \"NasalCongestion\"   \"CoughYN\"           \"Sneeze\"           \n [7] \"Fatigue\"           \"SubjectiveFever\"   \"Headache\"         \n[10] \"Weakness\"          \"WeaknessYN\"        \"CoughIntensity\"   \n[13] \"CoughYN2\"          \"Myalgia\"           \"MyalgiaYN\"        \n[16] \"RunnyNose\"         \"AbPain\"            \"ChestPain\"        \n[19] \"Diarrhea\"          \"EyePn\"             \"Insomnia\"         \n[22] \"ItchyEye\"          \"Nausea\"            \"EarPn\"            \n[25] \"Hearing\"           \"Pharyngitis\"       \"Breathless\"       \n[28] \"ToothPn\"           \"Vision\"            \"Vomit\"            \n[31] \"Wheeze\"            \"BodyTemp\"         \n```\n:::\n:::\n\n\n## Data Split\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_split <- initial_split(symptoms_fit, prop = 3/4) # 75% of data goes into training set\n\ntrain_data <- training(data_split)\ntest_data <- testing(data_split)\n```\n:::\n\n\n## Model 1 fitting: all variables to predict nausea\n\n### Define the model: logistic regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlog_mod <- logistic_reg() %>% #model type is logistic regression \n  set_engine(\"glm\") #engine set to generalized linear model\n```\n:::\n\n\nI am using a logistic regression here because the outcome of interest (Nausea Y/N) is categorical\n\n### Create recipe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrecipe_nausea <- recipe(Nausea ~., data = train_data)\n```\n:::\n\n\nNausea is the outcome and all other variables are predictors\n\n### Create workflow: combine model definition and recipe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnausea_log_wf <- workflow() %>% \n  add_model(log_mod) %>% #model definition \n  add_recipe(recipe_nausea) #model recipe\n```\n:::\n\n\nThis will run a logistic regression on the flu data, predicting nausea using all other variables that we kept.\n\n### Model fitting\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnausea_fit <- nausea_log_wf %>% \n  fit(data = train_data)\n\nnausea_fit %>% extract_fit_parsnip() %>% \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 38 × 5\n   term                 estimate std.error statistic p.value\n   <chr>                   <dbl>     <dbl>     <dbl>   <dbl>\n 1 (Intercept)           -2.40       8.84     -0.271  0.786 \n 2 SwollenLymphNodesYes  -0.250      0.233    -1.07   0.284 \n 3 ChestCongestionYes     0.178      0.252     0.709  0.478 \n 4 ChillsSweatsYes        0.390      0.333     1.17   0.243 \n 5 NasalCongestionYes     0.607      0.294     2.06   0.0392\n 6 CoughYNYes            -0.496      0.610    -0.813  0.416 \n 7 SneezeYes              0.151      0.243     0.623  0.534 \n 8 FatigueYes             0.0852     0.442     0.193  0.847 \n 9 SubjectiveFeverYes    -0.0701     0.261    -0.268  0.789 \n10 HeadacheYes            0.659      0.357     1.85   0.0648\n# … with 28 more rows\n```\n:::\n:::\n\n\n### Model assessment on training data: ROC curve\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(626)\nnausea_aug_test <- augment(nausea_fit, train_data)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in predict.lm(object, newdata, se.fit, scale = 1, type = if (type == :\nprediction from a rank-deficient fit may be misleading\n\nWarning in predict.lm(object, newdata, se.fit, scale = 1, type = if (type == :\nprediction from a rank-deficient fit may be misleading\n```\n:::\n\n```{.r .cell-code}\nnausea_aug_test %>% \n  roc_curve(truth = Nausea, .pred_Yes, event_level = \"second\") %>% \n  autoplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\nℹ The deprecated feature was likely used in the yardstick package.\n  Please report the issue at <\u001b]8;;https://github.com/tidymodels/yardstick/issues\u0007https://github.com/tidymodels/yardstick/issues\u001b]8;;\u0007>.\n```\n:::\n\n::: {.cell-output-display}\n![](modeleval_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nnausea_aug_test %>% roc_auc(truth = Nausea, .pred_Yes, \n                            event_level = \"second\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc binary         0.785\n```\n:::\n:::\n\n\nROC-AUC is ok\n\n### Model assessment on testing data: ROC curve\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(626)\nnausea_fit_test <- nausea_log_wf %>% \n  fit(data = test_data)\n\nnausea_fit_test %>% extract_fit_parsnip() %>% \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 38 × 5\n   term                 estimate std.error statistic p.value\n   <chr>                   <dbl>     <dbl>     <dbl>   <dbl>\n 1 (Intercept)            7.27      21.8      0.334   0.739 \n 2 SwollenLymphNodesYes  -0.0702     0.477   -0.147   0.883 \n 3 ChestCongestionYes     0.408      0.488    0.836   0.403 \n 4 ChillsSweatsYes       -0.0467     0.715   -0.0653  0.948 \n 5 NasalCongestionYes     0.0512     0.645    0.0793  0.937 \n 6 CoughYNYes             0.924      1.24     0.743   0.457 \n 7 SneezeYes              0.445      0.552    0.806   0.420 \n 8 FatigueYes             0.972      0.878    1.11    0.269 \n 9 SubjectiveFeverYes     1.47       0.609    2.41    0.0161\n10 HeadacheYes           -0.408      0.591   -0.690   0.490 \n# … with 28 more rows\n```\n:::\n\n```{.r .cell-code}\nnausea_aug_test2 <- augment(nausea_fit_test, test_data)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in predict.lm(object, newdata, se.fit, scale = 1, type = if (type == :\nprediction from a rank-deficient fit may be misleading\n\nWarning in predict.lm(object, newdata, se.fit, scale = 1, type = if (type == :\nprediction from a rank-deficient fit may be misleading\n```\n:::\n\n```{.r .cell-code}\nnausea_aug_test2 %>% \n  roc_curve(truth = Nausea, .pred_Yes, event_level = \"second\") %>% \n  autoplot()\n```\n\n::: {.cell-output-display}\n![](modeleval_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\nnausea_aug_test2 %>% roc_auc(truth = Nausea, .pred_Yes, \n                            event_level = \"second\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc binary         0.857\n```\n:::\n:::\n\n\nThe testing data out-performed the training set\n\n## Model 2 fitting: runny nose to predict nausea\n\n### Create new recipe and workflow\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrecipe_nausea2 <- recipe(Nausea ~RunnyNose, data = train_data)\n\nnausea_log_wf2 <- workflow() %>% \n  add_model(log_mod) %>% #model definition, use the same as Model 1\n  add_recipe(recipe_nausea2) #model recipe\n```\n:::\n\n\n### Model fitting\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnausea_fit2 <- nausea_log_wf2 %>% \n  fit(data = train_data)\n\nnausea_fit2 %>% extract_fit_parsnip() %>% \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 5\n  term         estimate std.error statistic   p.value\n  <chr>           <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)   -0.667      0.162    -4.13  0.0000364\n2 RunnyNoseYes   0.0758     0.194     0.391 0.696    \n```\n:::\n:::\n\n\n### Model assessment on training data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(626)\nnausea_aug_test2 <- augment(nausea_fit2, train_data)\n\nnausea_aug_test2 %>% \n  roc_curve(truth = Nausea, .pred_Yes, event_level = \"second\") %>% \n  autoplot()\n```\n\n::: {.cell-output-display}\n![](modeleval_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\nnausea_aug_test2 %>% roc_auc(truth = Nausea, .pred_Yes, \n                            event_level = \"second\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc binary         0.508\n```\n:::\n:::\n\n\nThe ROC-AUC here is lower than Model 1\n\n### Model assessment on testing data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(626)\nnausea_fit_test3 <- nausea_log_wf2 %>% \n  fit(data = test_data)\n\nnausea_fit_test3 %>% extract_fit_parsnip() %>% \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 5\n  term         estimate std.error statistic p.value\n  <chr>           <dbl>     <dbl>     <dbl>   <dbl>\n1 (Intercept)   -0.619      0.331   -1.87    0.0618\n2 RunnyNoseYes  -0.0324     0.375   -0.0864  0.931 \n```\n:::\n\n```{.r .cell-code}\nnausea_aug_test3 <- augment(nausea_fit_test3, test_data)\n\nnausea_aug_test3 %>% \n  roc_curve(truth = Nausea, .pred_Yes, event_level = \"second\") %>% \n  autoplot()\n```\n\n::: {.cell-output-display}\n![](modeleval_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\nnausea_aug_test3 %>% roc_auc(truth = Nausea, .pred_Yes, \n                            event_level = \"second\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 roc_auc binary         0.503\n```\n:::\n:::\n\n\nThe testing data is no different. Runny nose is likely not a good predictor of body temp.\n",
    "supporting": [
      "modeleval_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}